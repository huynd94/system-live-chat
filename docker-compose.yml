version: '3.3'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: chat_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: chat_system
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - chat_network

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: chat_server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:admin123@mongodb:27017/chat_system?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./server/public:/app/public
    networks:
      - chat_network

  # Widget Client
  widget:
    build:
      context: ./client-widget
      dockerfile: Dockerfile
    container_name: chat_widget
    restart: unless-stopped
    ports:
      - "3001:80"
    networks:
      - chat_network

  # Dashboard Client
  dashboard:
    build:
      context: ./client-dashboard
      dockerfile: Dockerfile
    container_name: chat_dashboard
    restart: unless-stopped
    environment:
      REACT_APP_SERVER_URL: ${REACT_APP_SERVER_URL}
    ports:
      - "3000:80"
    networks:
      - chat_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: chat_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/ssl:/etc/nginx/ssl
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - server
      - dashboard
      - widget
    networks:
      - chat_network

  # Certbot for SSL
  certbot:
    image: certbot/certbot
    container_name: chat_certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - chat_network

volumes:
  mongodb_data:
    driver: local

networks:
  chat_network:
    driver: bridge